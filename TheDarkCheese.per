(load "TheDarkCheese/starting strategic numbers")
(load "TheDarkCheese/user patch constants")

(defconst extended-dark-age-food-threshold 350)
(defconst extended-dark-age-pop-threshold 25)
(defconst extended-dark-age-warning 24)
(defconst minimum-dark-age-population 23)

(defconst max-villagers 200)

(defconst low-wood-amount 10)
(defconst low-priority-lumber-camp-drop-distance 8)

(defconst goal-extended-dark-age 0)
(defconst goal-minimal-farming 1)
(defconst goal-low-priority-lumber-camps 2)
(defconst goal-food-located 3)

(defconst farm-count-minimal 4)
(defconst farm-timer 1)
(defconst farm-delay 25)


; Train villagers
; This happens when food is available, or when extended dark age has been detected
(defrule
    (civilian-population < max-villagers)
    (current-age == dark-age)
    (or 
        (goal goal-extended-dark-age 1)
        (and 
            (population < minimum-dark-age-population)
            (can-train villager)
        )
    ) =>

    (train villager)
)

(defrule
(civilian-population < max-villagers)
    (current-age == feudal-age)
    (can-train villager) =>

    (train villager)
)

; Start building farms in extended dark age
(defrule
    (goal goal-extended-dark-age 1) =>
        (set-goal goal-minimal-farming 1)
        (enable-timer farm-timer 1)
)

; Farm during extended dark age
(defrule
    (timer-triggered farm-timer)
    (goal goal-minimal-farming 1)
    (building-type-count farm < farm-count-minimal) =>
        (build farm)
        (disable-timer farm-timer)
        (enable-timer farm-timer farm-delay)
)

; Detect extended dark age
(defrule
    (or
        (food-amount <= extended-dark-age-food-threshold)
        (and
            (dropsite-min-distance food > 5)
            (not (can-afford-research feudal-age))
        )
    )
    (not (up-research-status c: feudal-age >= research-pending))
    (current-age == dark-age)
    (population == extended-dark-age-warning) =>
        (set-goal goal-extended-dark-age 1)
        (chat-local-to-self "Detected extended dark age")
        (build house)
        (disable-self)
)


; Find food immediately after house
(defrule
    (building-type-count house > 0) =>
        (up-assign-builders c: house c: 1)
        (disable-self)
)

; Stop exploring once sheep are found
(defrule
    (unit-type-count sheep >= 3) =>
        (set-strategic-number sn-number-explore-groups 2)
        (set-strategic-number sn-total-number-explorers 2)
        (set-strategic-number sn-minimum-civilian-explorers 0)
        (set-strategic-number sn-cap-civilian-explorers 0)
        (set-strategic-number sn-percent-civilian-gatherers 100)
        (set-strategic-number sn-food-gatherer-percentage 100)
        (disable-self)
)

; Build houses in the feudal age
(defrule
    (current-age == feudal-age)
    (population-headroom > 0)
    (housing-headroom <= 2) =>
        (build house)
)

; Build houses until Feudal threshold or extended dark age
(defrule 
    (current-age == dark-age)
    (population-headroom > 0)
    (housing-headroom <= 2)
    (or 
        (building-type-count house < 4 )
        (goal goal-extended-dark-age 1)
    )
         =>
        (build house)
)


; Build first house with multiple villagers
(defrule
    (true) => 
        (up-assign-builders c: house c: 3)
        (disable-self)
)


; Research loom if house stuck, food stuck, or population is 25 and can't research feudal
(defrule
    (can-research ri-loom)
    (up-pending-objects c: villager == 0)
    (or
        (not (can-afford-unit villager))
        (or 
            (housing-headroom == 0)
            (and
                (population >= minimum-dark-age-population)
                (and 
                    (current-age == dark-age)
                    (not (can-afford-research feudal-age))
                )
            )
        )
    )
     =>
        (research ri-loom)
        (disable-self)
)


; Build a mill when stuff is too far away or when low on sheep
(defrule
    (building-type-count-total mill == 0)
    (game-time > 30)
    (resource-found food)
    (or 
        (unit-type-count sheep == 0)
        (dropsite-min-distance food > 3)
    )
    =>
        (build mill)
)


; Start wood cutting when needed
(defrule
    (wood-amount <= low-wood-amount) =>
        (set-strategic-number sn-maximum-wood-drop-distance 6)
        (set-strategic-number sn-wood-gatherer-percentage 15)
        (disable-self)
)


; Build a lumber camp after mill
(defrule
    (building-type-count mill >= 1)
    (wood-amount >= 120) =>
        (build lumber-camp)
        (set-goal goal-low-priority-lumber-camps 1)
        (disable-self)
)


; Begin building lumber mills only if really really needed
(defrule
    (goal goal-low-priority-lumber-camps 1) 
    (can-build lumber-camp)
    (dropsite-min-distance wood > low-priority-lumber-camp-drop-distance) =>
        (build lumber-camp)
)


; Go to Feudal Age
(defrule
    (population >= minimum-dark-age-population)
    (can-research feudal-age)
    (can-afford-research feudal-age)
    (current-age == dark-age) =>
        (research feudal-age)
        (set-goal goal-extended-dark-age 0)
)


(defrule
    (current-age == feudal-age)
    (building-type-count barracks >= 1) =>
        (research ri-man-at-arms)      
)


(defrule 
    (current-age == feudal-age)
    (building-type-count farm < 20) =>
        (build farm)
)


(defrule 
    (current-age == feudal-age)
    (building-type-count barracks >= 2)
    (building-type-count farm < 40) =>
        (build farm)
)


(defrule 
    (current-age == feudal-age)
    (building-type-count barracks >= 4)
    (building-type-count farm < 60) =>
        (build farm)
)


(defrule 
    (current-age == feudal-age)
    (building-type-count barracks >= 6)
    (building-type-count farm < 80) =>
        (build farm)
)



(defrule
    (current-age == feudal-age)
    (dropsite-min-distance food > 5) => 
        (build mill)
)

(defrule 
    (current-age == feudal-age)
    (building-type-count blacksmith == 0)
    (wood-amount > 250) =>
        (build blacksmith)
)

(defrule
    (building-type-count blacksmith == 1)
    (can-research ri-forging) =>
        (research ri-forging)
)

(defrule
    (building-type-count blacksmith == 1)
    (can-research ri-fletching) =>
        (research ri-fletching)
)

(defrule
    (building-type-count blacksmith == 1)
    (can-research ri-scale-mail) =>
        (research ri-scale-mail)
)

(defrule 
    (current-age == feudal-age)
    (dropsite-min-distance gold > 3) =>
        (build mining-camp)
        (set-strategic-number sn-gold-gatherer-percentage 15)
)


(defrule 
    (can-train man-at-arms) =>
        (train militiaman-line)
)

(defrule
    (military-population > 10)
    (game-time > 1200) =>
        (attack-now)
)

(defrule 
    (wood-amount > 275)
    (current-age == feudal-age)
    (game-time > 1200) =>
        (build barracks)
)


(defrule 
    (can-research ri-double-bit-axe) =>
        (research ri-double-bit-axe)
        (disable-self)
)


(defrule 
    (can-research ri-wheel-barrow) =>
        (research ri-wheel-barrow)
        (disable-self)
)


(defrule 
    (can-research ri-horse-collar) =>
        (research ri-horse-collar)
        (disable-self)
)


(defrule
    (civilian-population > 40) =>
        (set-strategic-number sn-wood-gatherer-percentage 30)
        (set-strategic-number sn-food-gatherer-percentage 45)
        (set-strategic-number sn-gold-gatherer-percentage 25)
)

(defrule
    (civilian-population > 80) =>
        (set-strategic-number sn-wood-gatherer-percentage 30)
        (set-strategic-number sn-food-gatherer-percentage 50)
        (set-strategic-number sn-gold-gatherer-percentage 20)
)